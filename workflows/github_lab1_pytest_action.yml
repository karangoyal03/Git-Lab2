# name: Testing with Pytest
# run-nam: Pytest
# on:
#   push:
#     branches:
#       - main
#       - 'releases/**' # Filters to run only when a push to a branch that matches the branches filter occurs
#     branches-ignore:
#      - dev

#   label:
#     types:
#       - created
#   issues:
#     types:
#       - opened
#       - labeled

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout code
#       uses: actions/checkout@v2

#     - name: Set up Python
#       uses: actions/setup-python@v2
#       with:
#         python-version: 3.8

#     - name: Install dependencies
#       run: pip install -r requirements.txt

#     - name: Run tests and generate XML report
#       run: pytest --junitxml=pytest-report.xml
#       continue-on-error: false

#     - name: Upload test results
#       if: always()
#       uses: actions/upload-artifact@v2
#       with:
#         name: test-results
#         path: pytest-report.xml

#     - name: Notify on success
#       if: success()
#       run: echo "Tests passed successfully"

#     - name: Notify on failure
#       if: failure()
#       run: echo "Tests failed"

name: Testing with Pytest
run-name: Pytest Testing

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  PYTHONPATH: ./src

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.8'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-html flake8

    - name: Lint code
      run: flake8 src/ tests/ --max-line-length=88
      continue-on-error: true

    - name: Run tests with coverage
      run: |
        pytest \
          --cov=src \
          --cov-report=xml \
          --cov-report=term \
          --junitxml=pytest-report.xml \
          --html=pytest-report.html \
          --self-contained-html \
          -v

    - name: Check coverage threshold
      run: coverage report --fail-under=75
      continue-on-error: true

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          pytest-report.xml
          pytest-report.html
          coverage.xml

    - name: Test Summary
      if: success()
      run: |
        echo "All tests passed successfully"
        echo "Coverage report and test results uploaded"

    - name: Test Failure
      if: failure()
      run: |
        echo "Tests failed - check the logs above"
        echo "Coverage or linting issues may have occurred"